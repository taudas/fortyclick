buildscript {
    repositories {
    }
    dependencies {
    }
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}
def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
 //   throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}
def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}
def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}
apply plugin: 'com.android.application'


apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--dirty', '--long'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getVersionCode = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', '--first-parent', '--count', 'master'
        standardOutput = stdout
    }
    return Integer.parseInt(stdout.toString().trim())
}

android {
    compileSdkVersion 31

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "org.mi.nthstone.fortyclick"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode getVersionCode()
        versionName getVersionName()
       // testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", "fc-$versionName-$versionCode")

    }

    signingConfigs {
        release {
            storeFile file("key.jks")
            keyAlias "key"
            keyPassword "password"
            storePassword "password"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
//    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

}
